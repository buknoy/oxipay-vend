server {
    listen       ${HTTP_PORT};
    server_name  ${SITE_URL};
    
    ## redirect to the https site
    return  301 https://${SITE_URL}$request_uri;

    
    root ${SITE_HOME};
    
    location / {
      proxy_pass ${PROXY_TO};
    }
}
server {
    access_log /dev/stdout;
    error_log  /dev/stderr;

    listen ${TLS_PORT} ssl http2;

    server_name  ${SITE_URL};

    ssl on;
    ssl_certificate ${SSL_CRT};
    ssl_certificate_key ${SSL_KEY};


    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';     
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;     
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    server_tokens off;

    root ${SITE_HOME};
    index index.html;
    autoindex off;

    location /assets {
        try_files ${DOLLAR}uri 404;    }
    
    location / {
        proxy_pass ${PROXY_TO};
    }

    
    
    # serve static files directly
    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|txt)$ {
        access_log        off;
        expires           30d;
        add_header        Cache-Control public;
    }
}


